{"_id":{"$oid":"59098e2c4283810c5d7ec62f"},"updatedAt":{"$date":"2017-05-03T08:00:44.352Z"},"createdAt":{"$date":"2017-05-03T08:00:44.352Z"},"title":"Exercice 1","content":"Exercice 1 :\n\nBonjour Régis,\nBon courage pour tous nous corriger :)\n\nLogin : colllilieux.brice@gmail.com\nMdp : LV-426\n\nLe \"Fork\" offre la possibilité de copier un projet existant dans son propre git. On peu s'en servir de base pour un nouveau projet, proposé des modifications ou amélioration au créateur ou lorsqu'on vois un bug qu'on propose de corriger...\nLe \"Pull request\" Permet de proposé des modification a un projet, le gros intéret c'est de pouvoir proposé sa participation a un projet.\nUne \"Branche\" c'est un morceau d'arb... est une divergence du travail principale qui va nous permettre d'apporter des modification sans risque de cassé le code déjà fonctionnel.\n La différence entre une \"Branche\" et un \"Fork\" est qu'un Fork créer un nouveau projet alors qu'une Branche crée une copie du projet dans le projet.","__v":0}
{"_id":{"$oid":"59099aaa4283810c5d7ec631"},"updatedAt":{"$date":"2017-05-03T13:29:54.049Z"},"createdAt":{"$date":"2017-05-03T08:54:02.488Z"},"title":"Le MEAN stack","content":"Angular : C’est un Framework front-end créer par deux développeurs de chez Google qui sert principalement à manipuler le DOM, c’est une sur-couche de Javascript. On ne peut s’en passer, car il est le A du ME”A”N stack !\n\n Angular UI Router : C’est une application qui permet de remplacer ng-Rout, on peut s’en passer. autant Front que Back-end\n\nExpress : C’est une frameword middleware, avec une succession de fonctions pour effectuer différentes tâches. Étant le E du M”E”AN stack, on ne peut s’en passer. Front et Back-end\n\nJSONWebToken :  C’est un standard d'échange  d’information sécurisé via un jeton pour par exemple reconnaître un utilisateur. Ce n’est pas obligatoire dans le projet, mais fortement recommander. Front- et Bakc-end\n\nMongoose : C’est un système de base de données NoSQL, Obligatoire dans tout projet MEAN stack puisqu’il est le M qui crée la magie ! Front- et Bakc-end\n\nMaterializeCSS : C’est un framework CSS basé sur le material design que je connais encore assez mal, créé par google et pas obligatoire dans se projet. Front- et Bakc-end\n\nPassport : C’est un middleware d’authantification pour nodeJs, pas obligatoire pour ce projet. Front- et Bakc-end\n\nBabel : C’est un transpilateur (rien a voir avec la transpiration) qui permet de traduire l’ES6 grand incompris des navigateurs... en ECMAScript compréhensible par tous. C’est pas obligatoire si le développeur code encore en ES5 par exemple. Front- et Bakc-end\n\nSCSS : C’est un langage de feuille de style en cascade qui une fois compilé va rendre du css qui va permettre un gain de temps via notamment la création de variable. Front- et Bakc-end\n\nNodemon : Est un middleware bien pratique, qui va  relancer un script si un fichier a été modifié mais en cas d’erreur, il attends qu’un fichier soit modifié pour se relancer. Pas obligatoire, mais  bien super pratique. Front et back-end.\n\nWebpack : C’est un loader qui permet de transformer le code  en JavaScript afin de consommer nos ligne de code en tant que module. Front et back-end. Pas obligatoire.\n\nLivereload : C’est un script qui permet de rafraîchire le navigateur lorsqu’on apporte une modification a notre code. Utilisable Front et back-end mais pas obligatoire.\n\nMEAN stack c’est quoi? C’est mon stack préférer car c’est Régis qui me l’a appris. Tout comme Xampp avec Apach, php, MySQL, le MEAN stack composé de MongoDB, Express, Angular et Node est un ensemble complet de technologie pour la création d’une application.","__v":0}
